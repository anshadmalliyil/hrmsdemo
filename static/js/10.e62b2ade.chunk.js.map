{"version":3,"sources":["reusable/DocsLink.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/base/businessunit/Create/BranchCreate.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","Array","from","test","_slicedToArray","arr","i","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","_e2","BranchCreate","branchid","useState","path","location","pathname","param","split","DefCountryData","countrY_NAME","pK_COUNTRY_ID","DefStateData","statE_NAME","pK_STATE_ID","DefmanagerData","NAME","pK_EMP_ID","DefBranchData","BRANCH_CODE","BRANCH_NAME","PK_BRANCH_ID","parseInt","TIME_ZONE","COUNTRY_ID","STATE_ID","IS_ACTIVE","StatusSwitch","selectedCountry","selectedState","FK_MANAGER_ID","BranchData","setBranchData","CountryData","setCountryData","StateData","setStateData","ManagerData","setManagerData","useEffect","LoadCountries","LoadManager","LoadDefaultValues","Value","fetch","then","res","json","response","obj","Branch_","pK_BRANCH_ID","brancH_NAME","brancH_CODE","String","countrY_ID","LoadStates","statE_ID","timE_ZONE","iS_ACTIVE","ManagerChange","handleInputChange","event","Country_Data","data","CountryId","parameter","State_Data","Manager_Data","data1","firsT_NAME","lasT_NAME","FinishSave","result","alert","xs","md","row","htmlFor","size","custom","id","onChange","map","item","placeholder","CountryChange","StateChange","variant","color","checked","ChangeSwitch","onClick","url","requestOptions","method","headers","body","JSON","stringify","SaveBranch","type"],"mappings":"qQAGMA,EAAW,SAAAC,GAAU,IAEvBC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACGC,EAJmB,YAKpBH,EALoB,iBAOlBI,EAAOH,EAAI,kDAA8CA,GAASD,EAAMI,KAE9E,OACE,qBAAKC,UAAU,sBAAf,SACE,cAAC,KAAD,2BACMF,GADN,IAEEC,KAAMA,EACNE,IAAI,sBACJC,OAAO,SACPF,UAAU,qBALZ,SAOE,uBAAOA,UAAU,aAAjB,SAAgCH,GAAQ,qBAMjCM,MAAMC,KAAKV,I,iCC3B1B,+CACe,SAASW,EAA4BC,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,YAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYlB,MAC7C,QAANY,GAAqB,QAANA,EAAoBO,MAAMC,KAAKV,GACxC,cAANE,GAAqB,2CAA2CS,KAAKT,GAAW,YAAiBF,EAAGC,QAAxG,K,gFCHa,SAASW,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIJ,MAAMM,QAAQF,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXE,QAA4BA,OAAOC,YAAYd,OAAOU,GAAjE,CACA,IAAIK,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKX,EAAIG,OAAOC,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETd,GAAKI,EAAKW,SAAWf,GAH8CK,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBL,EAAKC,IAAM,OAAAiB,EAAA,GAA2BlB,EAAKC,IGLjF,WACb,MAAM,IAAIkB,UAAU,6IHIgF,K,iCILvF,SAASC,EAAkBpB,EAAKqB,IAClC,MAAPA,GAAeA,EAAMrB,EAAIgB,UAAQK,EAAMrB,EAAIgB,QAE/C,IAAK,IAAIf,EAAI,EAAGqB,EAAO,IAAI1B,MAAMyB,GAAMpB,EAAIoB,EAAKpB,IAC9CqB,EAAKrB,GAAKD,EAAIC,GAGhB,OAAOqB,EAPT,mC,iCCAA,+CACe,SAASC,EAA2BpC,EAAGqC,GACpD,IAAIC,EAEJ,GAAsB,qBAAXtB,QAAgD,MAAtBhB,EAAEgB,OAAOC,UAAmB,CAC/D,GAAIR,MAAMM,QAAQf,KAAOsC,EAAK,YAA2BtC,KAAOqC,GAAkBrC,GAAyB,kBAAbA,EAAE6B,OAAqB,CAC/GS,IAAItC,EAAIsC,GACZ,IAAIxB,EAAI,EAEJyB,EAAI,aAER,MAAO,CACLC,EAAGD,EACHrC,EAAG,WACD,OAAIY,GAAKd,EAAE6B,OAAe,CACxBH,MAAM,GAED,CACLA,MAAM,EACNE,MAAO5B,EAAEc,OAGb2B,EAAG,SAAWpB,GACZ,MAAMA,GAERqB,EAAGH,GAIP,MAAM,IAAIP,UAAU,yIAGtB,IAEIF,EAFAa,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLJ,EAAG,WACDF,EAAKtC,EAAEgB,OAAOC,aAEhBf,EAAG,WACD,IAAI2C,EAAOP,EAAGb,OAEd,OADAkB,EAAmBE,EAAKnB,KACjBmB,GAETJ,EAAG,SAAWK,GACZF,GAAS,EACTd,EAAMgB,GAERJ,EAAG,WACD,IACOC,GAAoC,MAAhBL,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIM,EAAQ,MAAMd,O,uHCkUXiB,UA3VK,SAACC,GAAc,IAAD,EACRC,mBAAS,GADD,mBAE7BC,GAF6B,UAExBF,EAASG,SAASC,UACvBC,EAAOH,EAAUA,EAAKI,MAAM,KAAK,GAAnB,QACRhC,GAAP+B,IACDA,EAAM,GAIT,IAAME,EAAe,CAAC,CAEpBC,aAAa,qBACbC,cAAc,KAGVC,EAAa,CAAC,CAElBC,WAAW,mBACXC,YAAY,KAGRC,EAAe,CAAC,CAEpBC,KAAK,qBACJC,UAAU,KAENC,EAAc,CAEnBC,YAAY,GACZC,YAAY,GACZC,aAAaC,SAASf,GACtBgB,UAAU,GACVC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,cAAa,EAEbC,gBAAiB,GACjBC,cAAe,GACfC,cAAc,IAvCkB,EAyCA3B,mBAAS,IAzCT,gCA0CCA,mBAASe,IA1CV,mBA0CzBa,EA1CyB,KA0CdC,EA1Cc,OA2CG7B,mBAASM,GA3CZ,mBA2CzBwB,EA3CyB,KA2CbC,EA3Ca,OA4CD/B,mBAASS,GA5CR,mBA4CzBuB,EA5CyB,KA4CfC,EA5Ce,OA6CGjC,mBAASY,GA7CZ,mBA6CzBsB,EA7CyB,KA6CbC,EA7Ca,KAsDlCC,qBAAU,WAERC,IACAC,IACAC,EAAkBnC,KAGf,IAEH,IAAMmC,EAAkB,SAACC,GACnBA,EAAM,GACRC,MAAM,4CAA4CD,GACjDE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GAEJ,IAAMC,EAAID,EACJE,EAAS,GACfA,EAAQ7B,aAAa4B,EAAIE,aAE1BD,EAAQpB,cAAc,IACtBoB,EAAQ9B,YAAY6B,EAAIG,YACxBF,EAAQ/B,YAAY8B,EAAII,YAExBH,EAAQtB,gBAAgB0B,OAAOL,EAAIM,YACnCC,EAAWP,EAAIM,YAEfL,EAAQrB,cAAcyB,OAAOL,EAAIQ,UACjCP,EAAQ3B,UAAU0B,EAAIS,UACtBR,EAAQxB,UAAUuB,EAAIU,UACtBT,EAAQvB,aAA8B,GAAjBsB,EAAIU,UAczBC,EAAc,GACdJ,EAAWP,EAAIM,YAEfvB,EAAckB,OAQfW,EAAoB,SAACC,GAAW,IAAD,EACXA,EAAMhH,OAAtBN,EAD2B,EAC3BA,KAAMsC,EADqB,EACrBA,MACdkD,EAAc,2BAAKD,GAAN,kBAAmBvF,EAAOsC,MAmBnC8E,EAAgB,SAAC9E,GAGrBkD,EAAc,2BAAKD,GAAN,kBAAmB,gBAAkBjD,MAM9C0D,EAAc,WAElBI,MAAM,wCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACJ,IAAMe,EAAa,GACnB7B,EAAezB,GACfsD,EAAalF,KAAK,CAAC6B,aAAa,qBAA2BC,cAAc,KAHzD,oBAIAqC,GAJA,IAIhB,2BAA0B,CAAC,IAAhBhF,EAAe,QAClBgG,EAAK,GACXA,EAAI,aAAiBhG,EAAE0C,aACvBsD,EAAI,cAAkBhG,EAAE2C,cACxBoD,EAAalF,KAAKmF,IARJ,8BAYhBjC,EAAWH,gBAAgB,GAC3BM,EAAe6B,GACf/B,EAAcD,OAIdyB,EAAW,SAACS,GAChB,IAAIC,EAAU5C,SAAU2C,GAAa,EAAG,gCAAgCA,EAAU,GACrFrB,MAAM,oCAAoCsB,GACpCrB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACJ,IAAMmB,EAAW,GACjB/B,EAAaxB,GACbuD,EAAWtF,KAAK,CAACgC,WAAW,mBAAyBC,YAAY,KAHjD,oBAIAkC,GAJA,IAIhB,2BAA0B,CAAC,IAAhBhF,EAAe,QAClBgG,EAAK,GACXA,EAAI,WAAehG,EAAE6C,WACrBmD,EAAI,YAAgBhG,EAAE8C,YACxBqD,EAAWtF,KAAKmF,IARA,8BAYhBjC,EAAWF,cAAc,GACzBO,EAAa+B,GACbnC,EAAcD,OAIhBU,EAAY,WAGZG,MAAM,oDACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACJ,IAAMoB,EAAa,GACnB9B,EAAevB,GACfqD,EAAavF,KAAK,CAACmC,KAAK,qBAA2BC,UAAU,KAH7C,oBAIA+B,GAJA,IAIhB,2BAA0B,CAAC,IAAhBhF,EAAe,QAClBqG,EAAM,GACZA,EAAK,KAASrG,EAAEsG,WAAW,GAAGtG,EAAEuG,UAChCF,EAAK,UAAcrG,EAAEiD,UACvBmD,EAAavF,KAAKwF,IARF,8BAahB/B,EAAe8B,GACfrC,EAAWD,cAAc,GACzBE,EAAcD,OAwBdyC,EAAa,SAACC,GACdA,EAAS,EAEXC,MAAM,WAKNA,MAAM,WAGd,OACE,cAAC,KAAD,UACA,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,oBAEE,+CAEF,eAAC,IAAD,WACQ,eAAC,IAAD,CAAYC,KAAG,EAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,cAAC,KAAD,CAAQE,QAAQ,WAAhB,uBAEF,cAAC,IAAD,CAAMH,GAAG,KAAKC,GAAG,IAAIG,KAAK,KAA1B,SACE,cAAC,KAAD,CAASC,QAAM,EAACD,KAAK,KAAKvI,KAAK,gBAAgByI,GAAG,gBAAgBnG,MAAOiD,EAAWD,cAAeoD,SAAU,SAACvF,GAAD,OAAKiE,EAAcjE,EAAE7C,OAAOgC,QAAzI,SAECuD,EAAY8C,KAAI,SAAAC,GAAI,OACjC,wBAEEtG,MAAOsG,EAAKnE,UAFd,SAIGmE,EAAKpE,MAHDoE,EAAKnE,qBASP,eAAC,IAAD,CAAY4D,KAAG,EAAf,UACC,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,cAAC,KAAD,CAAQE,QAAQ,aAAhB,2BAEF,cAAC,IAAD,CAAMH,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAAQK,GAAG,aAAazI,KAAK,cAAc6I,YAAY,cAAcvG,MAAOiD,EAAWZ,YAAa+D,SAAU,SAACvF,GAAD,OAAKkE,EAAkBlE,WAIzI,eAAC,IAAD,CAAYkF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,cAAC,KAAD,CAAQE,QAAQ,QAAhB,2BAEF,cAAC,IAAD,CAAMH,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAAQK,GAAG,QAAQzI,KAAK,cAAc6I,YAAY,cAAavG,MAAOiD,EAAWX,YAAa8D,SAAU,SAACvF,GAAD,OAAKkE,EAAkBlE,WAGnI,eAAC,IAAD,CAAYkF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,cAAC,KAAD,CAAQE,QAAQ,QAAhB,yBAEF,cAAC,IAAD,CAAMH,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAAQK,GAAG,QAAQzI,KAAK,YAAY6I,YAAY,YAAWvG,MAAOiD,EAAWR,UAAW2D,SAAU,SAACvF,GAAD,OAAKkE,EAAkBlE,WAG7H,eAAC,IAAD,CAAYkF,KAAG,EAAf,UACM,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,cAAC,KAAD,CAAQE,QAAQ,YAAhB,0BAEF,cAAC,IAAD,CAAMH,GAAG,KAAKC,GAAG,IAAIG,KAAK,KAA1B,SACA,cAAC,KAAD,CAASC,QAAM,EAACD,KAAK,KAAKvI,KAAK,kBAAkByI,GAAG,gBAAiBnG,MAAOiD,EAAWH,gBAE3FsD,SAAU,SAACvF,GAAD,OAxLA,SAACmE,GAAW,IAAD,EACPA,EAAMhH,OAAhBgC,GADiB,EACvBtC,KADuB,EACjBsC,OACdiD,EAAWH,gBAAgB9C,EAE1BkD,EAAcD,GAEfyB,EAAW1E,GAkLcwG,CAAc3F,IAFzB,SAIRsC,EAAYkD,KAAI,SAAAC,GAAI,OACtB,wBAEEtG,MAAOsG,EAAKzE,cAFd,SAIGyE,EAAK1E,cAHD0E,EAAKzE,yBAWJ,eAAC,IAAD,CAAYkE,KAAG,EAAf,UACE,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,cAAC,KAAD,CAAQE,QAAQ,UAAhB,wBAEF,cAAC,IAAD,CAAMH,GAAG,KAAKC,GAAG,IAAIG,KAAK,KAA1B,SACE,cAAC,KAAD,CAASC,QAAM,EAACD,KAAK,KAAKvI,KAAK,cAAcyI,GAAG,cAAcnG,MAAOiD,EAAWF,cAAeqD,SAAU,SAACvF,GAAD,OAnMvG,SAACmE,GAAW,IAAD,EACLA,EAAMhH,OAAhBgC,GADe,EACrBtC,KADqB,EACfsC,OACdiD,EAAWF,cAAc/C,EAExBkD,EAAcD,GA+L+GwD,CAAY5F,IAA1H,SACCwC,EAAUgD,KAAI,SAAAC,GAAI,OAC/B,wBAEEtG,MAAOsG,EAAKtE,YAFd,SAIGsE,EAAKvE,YAHDuE,EAAKtE,uBASJ,cAAC,IAAD,CAAM6D,GAAG,IAAT,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAQG,QAAQ,OAAhB,oBACA,cAAC,KAAD,CAASlI,UAAW,OAAQ4I,QAAS,KAAMhJ,KAAK,eAAeiJ,MAAO,UAAWC,QAAS3D,EAAWJ,aAAcuD,SAAU,SAACvF,GAAD,OA7R1H,SAACmE,GAAS,IAAD,EACJA,EAAMhH,OAAtBN,EADoB,EACpBA,KADoB,EACdsC,MACdiD,EAAWJ,aAAamC,EAAMhH,OAAO4I,QACrC3D,EAAWL,UAAkC,GAAxBoC,EAAMhH,OAAO4I,QAAgB,EAAE,EACpD1D,EAAc,2BAAKD,GAAN,kBAAmBvF,EAAOsH,EAAMhH,OAAO4I,WAyR8FC,CAAahG,cAI3J,eAAC,IAAD,WACA,cAAC,IAAD,CAAUoF,KAAK,KAAKU,MAAM,UAAUG,QAAS,SAACjG,GAAD,OAjI9B,WACjBoC,EAAWP,WAAYF,SAAUS,EAAWH,iBAC5CG,EAAWN,SAAWH,SAAUS,EAAWF,eAC3CE,EAAWD,cAAgBC,EAAWD,cAAkBR,SAASS,EAAWD,eAAtB,EAEpD,IAAM+D,EAAI,4CAA4C9D,EAAWV,aAAe,EAAI,IAAIU,EAAWV,aAAgB,IAE7GyE,EAAiB,CACrBC,OAFWhE,EAAWV,aAAe,EAAI,MAAM,OAG/C2E,QAAS,CAAE,eAAgB,oBAC3B,8BAA+B,IAC/BC,KAAMC,KAAKC,UAAUpE,IAEzBa,MAAMiD,EAAKC,GACVjD,MAAK,SAAAG,GAAQ,OAAIA,EAASD,UAC1BF,MAAK,SAAAmB,GAAI,OAAIQ,EAAWR,MAkH2BoC,IAAlD,kBAEM,eAAC,IAAD,CAASC,KAAK,QAAQtB,KAAK,KAAKU,MAAM,SAAtC,UAA+C,cAAC,IAAD,CAAOjJ,KAAK,YAA3D","file":"static/js/10.e62b2ade.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'Create New' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useState,useEffect,array } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CCollapse,\r\n  CSelect,\r\n  CFade,\r\n  CDropdownMenu,\r\n  CDropdownItem,\r\n  CDropdown,\r\n  CDropdownDivider,\r\n  CDropdownToggle,\r\n  CLabel,\r\n  CSwitch,\r\n  CFormGroup,\r\n  CInput,\r\n  CInputRadio,\r\n  CInputFile,\r\n  CRow \r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { DocsLink } from 'src/reusable'\r\n//import { for } from 'core-js/fn/symbol'\r\nconst BranchCreate= (branchid) => {\r\n  const [page, setPage] = useState(1);\r\n let path=branchid.location.pathname;\r\n let param=!path ? \"\":path.split(\"/\")[4];\r\n if(param==undefined){\r\n   param=0;\r\n }\r\n\r\n \r\nconst DefCountryData=[{\r\n   \r\n  countrY_NAME:\"--select Country--\",\r\n  pK_COUNTRY_ID:\"\"\r\n}]\r\n\r\nconst DefStateData=[{\r\n \r\n  statE_NAME:\"--select State--\",\r\n  pK_STATE_ID:\"\"\r\n}]\r\n\r\nconst DefmanagerData=[{\r\n \r\n  NAME:\"--select Manager--\",\r\n   pK_EMP_ID:\"\"\r\n }]\r\n const DefBranchData={\r\n     \r\n  BRANCH_CODE:\"\",\r\n  BRANCH_NAME:\"\",\r\n  PK_BRANCH_ID:parseInt(param),\r\n  TIME_ZONE:\"\",\r\n  COUNTRY_ID:0,\r\n  STATE_ID:0,\r\n  IS_ACTIVE:0,\r\n  StatusSwitch:false,\r\n  //ModelLabel:\"Create Branch\",\r\n  selectedCountry: \"\",\r\n  selectedState: \"\",\r\n  FK_MANAGER_ID:\"\"\r\n}\r\n const [branchlist,setbranchlist]=useState([]);\r\n  const [BranchData,setBranchData]=useState(DefBranchData);\r\n  const [CountryData,setCountryData]=useState(DefCountryData);\r\n  const [StateData,setStateData]=useState(DefStateData);\r\n  const [ManagerData,setManagerData]=useState(DefmanagerData);\r\n  const ChangeSwitch = (event)=>{\r\n    const { name, value } = event.target;\r\n    BranchData.StatusSwitch=event.target.checked;\r\n    BranchData.IS_ACTIVE=event.target.checked == true?1:0;\r\n    setBranchData({ ...BranchData, [name]: event.target.checked })\r\n  }\r\n  \r\n  \r\nuseEffect(()=>{\r\n \r\n  LoadCountries();\r\n  LoadManager();\r\n  LoadDefaultValues(param);\r\n\r\n  \r\n  }, []);\r\n\r\n  const LoadDefaultValues=(Value)=>{\r\n    if (Value>0){\r\n      fetch(\"http://localhost:51264/api/BUSINESS_UNIT/\"+Value)\r\n      .then(res => res.json())\r\n        .then(response => {\r\n    \r\n          const obj=response;//branchlist.filter((e) => e.PK_BRANCH_ID === DefBranchData.PK_BRANCH_ID)[0];\r\n          const Branch_ ={};\r\n          Branch_.PK_BRANCH_ID=obj.pK_BRANCH_ID;\r\n         // BranchData.FK_MANAGER_ID=obj.MANAGER;\r\n         Branch_.FK_MANAGER_ID=\"1\";//String(obj.fK_MANAGER_ID);\r\n         Branch_.BRANCH_NAME=obj.brancH_NAME;\r\n         Branch_.BRANCH_CODE=obj.brancH_CODE;\r\n         // BranchData.COUNTRY_ID=obj.COUNTRY_ID;\r\n         Branch_.selectedCountry=String(obj.countrY_ID);\r\n         LoadStates(obj.countrY_ID);\r\n         // BranchData.STATE_ID=obj.STATE_ID;\r\n         Branch_.selectedState=String(obj.statE_ID);\r\n         Branch_.TIME_ZONE=obj.timE_ZONE;\r\n         Branch_.IS_ACTIVE=obj.iS_ACTIVE;\r\n         Branch_.StatusSwitch=obj.iS_ACTIVE == 1 ?true:false;\r\n        //  setBranchData({ ...BranchData, \r\n        //   PK_BRANCH_ID:obj.pK_BRANCH_ID,\r\n        //   FK_MANAGER_ID:1,\r\n        //  BRANCH_NAME:obj.brancH_NAME,\r\n        //  BRANCH_CODE:obj.brancH_CODE,\r\n        // selectedCountry:String(obj.countrY_ID),\r\n      \r\n        //  // BranchData.STATE_ID=obj.STATE_ID;\r\n        //  selectedState:String(obj.statE_ID),\r\n        //  TIME_ZONE:obj.timE_ZONE,\r\n        //  IS_ACTIVE:obj.iS_ACTIVE,\r\n        //  StatusSwitch:obj.iS_ACTIVE == 1 ?true:false,\r\n        //  });\r\n         ManagerChange(1)\r\n         LoadStates(obj.countrY_ID);\r\n  \r\n         setBranchData(Branch_);\r\n         // CountryData.ModelLabel=\"Update Country\";\r\n          // setBranchData(BranchData);\r\n     \r\n        })\r\n      }\r\n  }\r\n  \r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target\r\n    setBranchData({ ...BranchData, [name]: value })\r\n  }\r\n  const CountryChange = (event) => {\r\n    const { name, value } = event.target\r\n    BranchData.selectedCountry=value;\r\n    // CountryData.ModelLabel=\"Update Country\";\r\n     setBranchData(BranchData);\r\n    // setBranchData({ ...BranchData, [name]: value })\r\n    LoadStates(value);\r\n  }\r\n\r\n  const StateChange = (event) => {\r\n    const { name, value } = event.target\r\n    BranchData.selectedState=value;\r\n    // CountryData.ModelLabel=\"Update Country\";\r\n     setBranchData(BranchData);\r\n    // setBranchData({ ...BranchData, selectedState: value })\r\n  }\r\n\r\n  const ManagerChange = (value) => {\r\n    // BranchData.FK_MANAGER_ID=value;\r\n    //  setBranchData(BranchData);\r\n    setBranchData({ ...BranchData, [\"FK_MANAGER_ID\"]: value })\r\n  }\r\n  const toggle = ()=>{\r\n    setBranchData(DefBranchData);\r\n   // setModal(!modal);\r\n  }\r\n  const LoadCountries=()=>{\r\n\r\n    fetch(\"http://localhost:51264/api/countries\")\r\n    .then(res => res.json())\r\n      .then(response => {\r\n        const Country_Data=[];\r\n        setCountryData(DefCountryData);\r\n        Country_Data.push({countrY_NAME:\"--Select Country--\",      pK_COUNTRY_ID:\"\"})\r\n        for (const i of response) {\r\n          const data={};\r\n          data[\"countrY_NAME\"]=i.countrY_NAME;\r\n          data[\"pK_COUNTRY_ID\"]=i.pK_COUNTRY_ID;\r\n          Country_Data.push(data)\r\n        }\r\n        // const CountryDrp={};\r\n        // CountryDrp=Country_Data;\r\n        BranchData.selectedCountry=\"\";\r\n        setCountryData(Country_Data);\r\n        setBranchData(BranchData);\r\n        \r\n      })\r\n  }\r\n  const LoadStates=(CountryId)=>{\r\n    let parameter=parseInt( CountryId) > 0 ?\"/GetSTATEByCountry?CountryId=\"+CountryId:\"\"\r\n fetch(\"http://localhost:51264/api/States\"+parameter)\r\n      .then(res => res.json())\r\n        .then(response => {\r\n          const State_Data=[];\r\n          setStateData(DefStateData);\r\n          State_Data.push({statE_NAME:\"--Select State--\",      pK_STATE_ID:\"\"})\r\n          for (const i of response) {\r\n            const data={};\r\n            data[\"statE_NAME\"]=i.statE_NAME;\r\n            data[\"pK_STATE_ID\"]=i.pK_STATE_ID;\r\n          State_Data.push(data)\r\n          }\r\n          // const CountryDrp={};\r\n          // CountryDrp=Country_Data;\r\n          BranchData.selectedState=\"\";\r\n          setStateData(State_Data);\r\n          setBranchData(BranchData);\r\n          \r\n        })\r\n  }\r\n  const LoadManager=()=>{\r\n  \r\n     \r\n        fetch(\"http://localhost:51264/api/EMPLOYEE_MAIN_DETAILS\")\r\n        .then(res => res.json())\r\n          .then(response => {\r\n            const Manager_Data=[];\r\n            setManagerData(DefmanagerData);\r\n            Manager_Data.push({NAME:\"--Select Manager--\",      pK_EMP_ID:\"\"})\r\n            for (const i of response) {\r\n              const data1={};\r\n              data1[\"NAME\"]=i.firsT_NAME+\"\"+i.lasT_NAME;\r\n              data1[\"pK_EMP_ID\"]=i.pK_EMP_ID;\r\n            Manager_Data.push(data1)\r\n            }\r\n            // const CountryDrp={};\r\n            // CountryDrp=Country_Data;\r\n            \r\n            setManagerData(Manager_Data);\r\n            BranchData.FK_MANAGER_ID=\"\";\r\n            setBranchData(BranchData);\r\n            \r\n          })     \r\n  }\r\n  \r\n    const SaveBranch = ()=>{\r\n      BranchData.COUNTRY_ID =parseInt( BranchData.selectedCountry);\r\n      BranchData.STATE_ID = parseInt( BranchData.selectedState);\r\n      BranchData.FK_MANAGER_ID =!BranchData.FK_MANAGER_ID ? 0:parseInt(BranchData.FK_MANAGER_ID);\r\n     \r\n        const url=\"http://localhost:51264/api/BUSINESS_UNIT\"+(BranchData.PK_BRANCH_ID > 0 ? \"/\"+BranchData.PK_BRANCH_ID+\"\":\"\");\r\n        const method=BranchData.PK_BRANCH_ID > 0 ? \"PUT\":\"POST\";\r\n        const requestOptions = {\r\n          method: method,\r\n          headers: { 'Content-Type': 'application/json' },\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n          body: JSON.stringify(BranchData)\r\n      };\r\n      fetch(url, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => FinishSave(data)\r\n      );\r\n    }\r\n    \r\n      const FinishSave = (result) => {\r\n        if (result > 0) {\r\n         // LoadAll();\r\n          alert(\"Success\");\r\n          \r\n    \r\n        }\r\n        else {\r\n          alert(\"failed\");\r\n        }\r\n      }\r\n  return (\r\n    <CRow>\r\n    <CCol xs=\"12\" md=\"12\">\r\n      <CCard>\r\n        <CCardHeader>\r\n          Create\r\n          <small> Branch</small>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"selectLg\">MANAGER</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"10\" md=\"5\" size=\"lg\">\r\n                    <CSelect custom size=\"lg\" name=\"FK_MANAGER_ID\" id=\"FK_MANAGER_ID\" value={BranchData.FK_MANAGER_ID} onChange={(e)=>ManagerChange(e.target.value)}>\r\n                     \r\n                    {ManagerData.map(item => (\r\n        <option\r\n          key={item.pK_EMP_ID}\r\n          value={item.pK_EMP_ID}\r\n        >\r\n          {item.NAME}\r\n        </option>\r\n      ))}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n             <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"text-input\">BRANCH_CODE</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"10\" md=\"5\">\r\n                <CInput id=\"text-input\" name=\"BRANCH_CODE\" placeholder=\"BRANCH CODE\" value={BranchData.BRANCH_CODE} onChange={(e)=>handleInputChange(e)}/>\r\n              </CCol>\r\n            </CFormGroup>\r\n              \r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"Bname\">BRANCH_NAME</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"10\" md=\"5\">\r\n                <CInput id=\"Bname\" name=\"BRANCH_NAME\" placeholder=\"BRANCH NAME\"value={BranchData.BRANCH_NAME} onChange={(e)=>handleInputChange(e)} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n              <CCol md=\"3\">\r\n                <CLabel htmlFor=\"Tzone\">TIME_ZONE</CLabel>\r\n              </CCol>\r\n              <CCol xs=\"10\" md=\"5\">\r\n                <CInput id=\"Tzone\" name=\"TIME_ZONE\" placeholder=\"TIME ZONE\"value={BranchData.TIME_ZONE} onChange={(e)=>handleInputChange(e)} />\r\n              </CCol>\r\n            </CFormGroup>\r\n            <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"countryid\">COUNTRY ID</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"10\" md=\"5\" size=\"lg\">\r\n                  <CSelect custom size=\"lg\" name=\"selectedCountry\" id=\"pK_COUNTRY_ID\"  value={BranchData.selectedCountry}\r\n              // onChange={(e) => this.setState({selectedTeam: e.target.value})}\r\n              onChange={(e)=>CountryChange(e)}\r\n              >\r\n         {CountryData.map(item => (\r\n        <option\r\n          key={item.pK_COUNTRY_ID}\r\n          value={item.pK_COUNTRY_ID}\r\n        >\r\n          {item.countrY_NAME}\r\n        </option>\r\n      ))}\r\n \r\n                    </CSelect>\r\n             \r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel htmlFor=\"stateid\">STATE ID</CLabel>\r\n                  </CCol>\r\n                  <CCol xs=\"10\" md=\"5\" size=\"lg\">\r\n                    <CSelect custom size=\"lg\" name=\"pK_STATE_ID\" id=\"pK_STATE_ID\" value={BranchData.selectedState} onChange={(e)=>StateChange(e)}>\r\n                    {StateData.map(item => (\r\n        <option\r\n          key={item.pK_STATE_ID}\r\n          value={item.pK_STATE_ID}\r\n        >\r\n          {item.statE_NAME}\r\n        </option>\r\n      ))}\r\n                    </CSelect>\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"name\">Status</CLabel>\r\n                    <CSwitch className={'mx-1'} variant={'3d'} name=\"StatusSwitch\" color={'primary'} checked={BranchData.StatusSwitch} onChange={(e)=>ChangeSwitch(e)} />\r\n                  </CFormGroup>\r\n                </CCol>         \r\n        </CCardBody>\r\n        <CCardFooter>\r\n        <CButton  size=\"sm\" color=\"success\" onClick={(e)=>SaveBranch()}>Save</CButton>\r\n              {/* <CButton type=\"button\" size=\"sm\" color=\"success\"><CIcon name=\"cil-scrubber\" onClick={(e)=>SaveBranch()}/> Submit</CButton> */}\r\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n            </CCardFooter>\r\n      </CCard>\r\n      </CCol>\r\n   </CRow>\r\n  )\r\n}\r\n \r\n\r\nexport default BranchCreate\r\n"],"sourceRoot":""}