{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/common/CommonData.js","views/base/company/listing/Company.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_slicedToArray","arr","i","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","f","normalCompletion","didErr","step","_e2","baseURL","getBadge","status","fields","key","_style","width","label","sorter","filter","Company","DefCompanyData","PK_COMPANY_ID","COMPANY_NAME","COMPANY_LOGO","COMPANY_DOMAIN","LICENSE_NO","ISSUE_DATE","EXPIRY_DATE","EMPLOYEE_RANGE","PRIMARY_PHONE_NO","SECONDARY_PHONE_NO","EMAIL_ADDRESS","POSTAL_CODE","ADDRESS","IS_ACTIVE","StatusSwitch","useState","page","setIsLoading","CompanyList","setCompanyList","modal","setModal","danger","setDanger","CompanyData","setCompanyData","LoadAll","fetch","then","res","json","response","data","companY_NAME","companY_LOGO","companY_DOMAIN","licensE_NO","expirY_DATE","employeE_RANGE","primarY_PHONE_NO","secondarY_PHONE_NO","emaiL_ADDRESS","postaL_CODE","address","pK_COMPANY_ID","iS_ACTIVE","catch","error","console","log","handleInputChange","event","target","toggle","FinishSave","result","alert","FinishDelete","useEffect","xs","lg","className","href","rel","items","itemsPerPage","pagination","scopedSlots","item","color","Status","index","variant","shape","size","onClick","id","obj","Company_Name","Company_Logo","Company_Domain","License_No","Expiry_Date","Employee_Range","PhoneNo","SECCONDARY_PHONE_NO","Seccondary_PhoneNo","Email","Postal_Code","Address","ModelLabel","Edittoggle","COMPANY_CODE","Company_Code","DeleteConfirm","show","onClose","closeButton","sm","htmlFor","placeholder","required","onChange","checked","ChangeSwitch","url","requestOptions","method","headers","body","JSON","stringify","SaveCompany","DeleteCompany"],"mappings":"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","file":"static/js/17.e16794bc.chunk.js","sourcesContent":["import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","// const baseURL = \"http://localhost:51264/\";\nconst baseURL = \"https://hrms.livosys.com/\";\nexport default baseURL\n","import React, { useState, useEffect }  from 'react'\r\n\r\nimport {\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n    CButton,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CRow,\r\n  CSwitch,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CLink,\r\n \r\n  CModalTitle\r\n} from '@coreui/react'\r\n//import { DocsLink } from 'src/reusable'\r\nimport baseURL from '../../../common/CommonData'\r\n// import usersData from '../../users/UsersData'\r\n\r\n  ////////Toaster///////////\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case 'Active': return 'success'\r\n    case 'Inactive': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\n\r\n// const fields = ['Country Name','Country Code']\r\nconst fields = [\r\n  { key: 'Company_Name', _style: { width: '15%'} },\r\n  //{ key: 'companY_LOGO', _style: { width: '60%'} },\r\n  { key: 'Company_Domain', _style: { width: '20%'} },\r\n  { key: 'License_No', _style: { width: '20%'} },\r\n  { key: 'Expiry_Date', _style: { width: '15%'} },\r\n  { key: 'Employee_Range', _style: { width: '20%'} },\r\n  { key: 'PhoneNo', _style: { width: '25%'} },\r\n // { key: 'Seccondary_PhoneNo', _style: { width: '40%'} },\r\n  { key: 'Email', _style: { width: '15%'} },\r\n // { key: 'Postal_Code', _style: { width: '40%'} },\r\n // { key: 'Address', _style: { width: '40%'} },\r\n\r\n  {\r\n    key: 'edit_details',\r\n    label: '',\r\n    _style: { width: '1%' },\r\n    sorter: false,\r\n    filter: false\r\n  },\r\n  {\r\n    key: 'delete',\r\n    label: '',\r\n    _style: { width: '1%' },\r\n    sorter: false,\r\n    filter: false\r\n  }\r\n]\r\n\r\n// var company_data=[];\r\n\r\nconst Company = () => {\r\n  //Default Values\r\n  const DefCompanyData={\r\n    PK_COMPANY_ID:0,\r\n    COMPANY_NAME:\"\",\r\n    COMPANY_LOGO:\"\",\r\n    COMPANY_DOMAIN:\"\",\r\n    LICENSE_NO :0,\r\n    ISSUE_DATE:\"\",\r\n    EXPIRY_DATE:\"\",\r\n    EMPLOYEE_RANGE:0,\r\n    PRIMARY_PHONE_NO:\"\",\r\n    SECONDARY_PHONE_NO:\"\",\r\n    EMAIL_ADDRESS:\"\",\r\n    POSTAL_CODE:\"\",\r\n    ADDRESS:\"\",\r\n    IS_ACTIVE:0,\r\n    StatusSwitch:false,\r\n    \r\n  }\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [CompanyList, setCompanyList] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n  const [danger, setDanger] = useState(false);\r\n  const [CompanyData,setCompanyData]=useState(DefCompanyData);\r\n\r\n  //Load All Company Details\r\n  const LoadAll=()=>{\r\n    fetch(baseURL+\"api/COMPANY_DETAILS\")\r\n    .then(res => res.json())\r\n      .then(response => {\r\n        const CompanyData=[];\r\n        setCompanyList([]);\r\n        for (const i of response) {\r\n          const data={};\r\n          data[\"Company_Name\"]=i.companY_NAME;\r\n        data[\"Company_Logo\"]=i.companY_LOGO;\r\n          data[\"Company_Domain\"]=i.companY_DOMAIN;\r\n          data[\"License_No\"]=i.licensE_NO;\r\n          data[\"Expiry_Date\"]=i.expirY_DATE;\r\n          data[\"Employee_Range\"]=i.employeE_RANGE;\r\n          data[\"PhoneNo\"]=i.primarY_PHONE_NO;\r\n          data[\"Seccondary_PhoneNo\"]=i.secondarY_PHONE_NO;\r\n          data[\"Email\"]=i.emaiL_ADDRESS;\r\n          data[\"Postal_Code\"]=i.postaL_CODE;\r\n          data[\"Address\"]=i.address;\r\n          data[\"PK_COMPANY_ID\"]=i.pK_COMPANY_ID;\r\n          data[\"Status\"]=i.iS_ACTIVE;\r\n          CompanyData.push(data)\r\n        }\r\n        setCompanyList(CompanyData);\r\n        \r\n        setIsLoading(false);\r\n      })\r\n      .catch(error => console.log(error));\r\n   }\r\n\r\n   //Change Status\r\n  const ChangeSwitch = (event)=>{\r\n    const { name, value } = event.target;\r\n    CompanyData.StatusSwitch=event.target.checked;\r\n    CompanyData.IS_ACTIVE=event.target.checked == true?1:0;\r\n    setCompanyData({ ...CompanyData, [name]: event.target.checked })\r\n  }\r\n  //Text change events from form\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target\r\n    setCompanyData({ ...CompanyData, [name]: value })\r\n  }\r\n  //Modal popup for create\r\n const toggle = ()=>{\r\n  setCompanyData(DefCompanyData);\r\n   setModal(!modal);\r\n  }\r\n    //Modal popup for Edit\r\n  const Edittoggle = (id)=>{\r\n    if(id > 0)\r\n    {\r\n      const obj=CompanyList.filter((e) => e.PK_COMPANY_ID == id)[0];\r\n      CompanyData.PK_COMPANY_ID=obj.PK_COMPANY_ID;\r\n      CompanyData.COMPANY_NAME=obj.Company_Name;\r\n      CompanyData.COMPANY_LOGO=obj.Company_Logo;\r\n      CompanyData.COMPANY_DOMAIN=obj.Company_Domain;\r\n      CompanyData.LICENSE_NO =obj.License_No;\r\n      CompanyData.EXPIRY_DATE=obj.Expiry_Date;\r\n      CompanyData.EMPLOYEE_RANGE=obj.Employee_Range;\r\n      CompanyData.PRIMARY_PHONE_NO=obj.PhoneNo;\r\n      CompanyData.SECCONDARY_PHONE_NO=obj.Seccondary_PhoneNo;\r\n      CompanyData.EMAIL_ADDRESS=obj.Email;\r\n      CompanyData.POSTAL_CODE=obj.Postal_Code;\r\n      CompanyData.ADDRESS=obj.Address;\r\n      CompanyData.IS_ACTIVE=obj.Status;\r\n      CompanyData.StatusSwitch=obj.Status == 1 ?true:false;\r\n      CompanyData.ModelLabel=\"Update Company\";\r\n      setCompanyData(CompanyData);\r\n    }\r\n    setModal(!modal);\r\n  }\r\n  //Edit/Update Company throgh API\r\n\r\n  const SaveCompany = ()=>{\r\n\r\n    const url=baseURL+\"api/COMPANY_DETAILS/\"+(CompanyData.PK_COMPANY_ID > 0 ? \"/\"+CompanyData.PK_COMPANY_ID+\"\":\"\");\r\n    const method=CompanyData.PK_COMPANY_ID > 0 ? \"PUT\":\"POST\";\r\n    const requestOptions = {\r\n      method: method,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      body: JSON.stringify(CompanyData)\r\n  };\r\n\r\n  fetch(url, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => FinishSave(data)\r\n      );\r\n  }\r\n //For delete notification\r\n  const FinishSave = (result) => {\r\n    if (result > 0) {\r\n      LoadAll();\r\n      alert(\"Success\");\r\n      setModal(!modal);\r\n\r\n    }\r\n    else {\r\n      alert(\"failed\");\r\n    }\r\n  }\r\n\r\n    //Delete Company through API\r\n  const DeleteConfirm = (id)=>{\r\n    if(id > 0)\r\n    {\r\n      const obj=CompanyList.filter((e) => e.PK_COMPANY_ID === id)[0];\r\n      CompanyData.PK_COMPANY_ID=obj.PK_COMPANY_ID;\r\n      CompanyData.COMPANY_NAME=obj.Company_Name;\r\n      CompanyData.COMPANY_CODE=obj.Company_Code;\r\n      CompanyData.IS_ACTIVE=obj.Status;\r\n      CompanyData.StatusSwitch=obj.Status === 1 ?true:false;\r\n      CompanyData.ModelLabel=\"Update Company\";\r\n      setCompanyData(CompanyData);\r\n    }\r\n    setDanger(!danger)\r\n  }\r\n\r\n   //Modal popup for Edit\r\n  const DeleteCompany = ()=>{\r\n    const url=baseURL+\"api/COMPANY_DETAILS/\"+ CompanyData.PK_COMPANY_ID+\"\";\r\n    \r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      \"Access-Control-Allow-Origin\": \"*\"\r\n  };\r\n  fetch(url, requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => FinishDelete(data)\r\n      );\r\n  }\r\n //For delete notification\r\n  const FinishDelete=(result)=>{\r\n    if(result > 0)\r\n    {\r\n      LoadAll();\r\n      alert(\"Success\");\r\n      setDanger(!danger)\r\n      \r\n    }\r\n    else\r\n    {\r\n      alert(\"failed\");\r\n    }\r\n  }\r\n\r\n \r\n \r\n  useEffect(()=>{\r\n    LoadAll();\r\n  }, [page]);\r\n  return (\r\n    <>\r\n\r\n      <CRow></CRow>\r\n      <CRow>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n            <CCardHeader>\r\n              Company List\r\n              {/* <DocsLink name=\"CModal\"/> */}\r\n              <div className=\"card-header-actions\">\r\n      <CLink \r\n        // {...rest}\r\n        href=\"/#/base/company/createcompany\"\r\n        rel=\"noreferrer noopener\" \r\n        target=\"_blank\" \r\n        className=\"card-header-action\"  \r\n      >\r\n        <small className=\"text-muted\">{ 'Create New' }</small>\r\n      </CLink>\r\n    </div>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n            <CDataTable\r\n              items={ CompanyList}\r\n              fields={fields}\r\n              itemsPerPage={5}\r\n              pagination\r\n              scopedSlots = {{\r\n                'Status':\r\n                  (item)=>(\r\n                    <td>\r\n                      <CBadge color={getBadge(item.Status === 1 ? \"Active\":\"Inactive\")}>\r\n                        {item.Status === 1 ? \"Active\":\"Inactive\"}\r\n                      </CBadge>\r\n                    </td>\r\n                  ),\r\n                'edit_details':\r\n                  (item, index)=>{\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        \r\n                       <CButton\r\n                        href={\"/#/base/company/createcompany/\"+item.PK_COMPANY_ID}\r\n                          color=\"primary\"\r\n                          variant=\"outline\"\r\n                          shape=\"square\"\r\n                          size=\"sm\"\r\n                        onClick={(e)=>Edittoggle(item.PK_COMPANY_ID)}\r\n                          // onClick={()=>{toggle(index)}}\r\n                        >\r\n                          Edit\r\n                       </CButton>\r\n                      </td>\r\n                      )\r\n                  },\r\n                'delete':\r\n                (item, index)=>{\r\n                  return (\r\n                    <td className=\"py-2\">\r\n                      <CButton\r\n                        color=\"danger\"\r\n                        variant=\"outline\"\r\n                        shape=\"square\"\r\n                        size=\"sm\"\r\n                        onClick={(e)=>DeleteConfirm(item.PK_COMPANY_ID)}\r\n                      >\r\n                        Delete\r\n                      </CButton>\r\n                    </td>\r\n                    )\r\n                },\r\n              }}\r\n            />\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n      </CRow>\r\n  \r\n      \r\n      <CModal\r\n        show={modal}\r\n        onClose={toggle} \r\n      >\r\n        <CModalHeader closeButton>{CompanyData.ModelLabel}</CModalHeader>\r\n        <CModalBody>\r\n        <CRow>\r\n        <CCol xs=\"12\" sm=\"12\">\r\n          <CCard>\r\n            {/* <CCardHeader>\r\n              {ModelLabel}\r\n              <small> Form</small>\r\n              <DocsLink name=\"-Input\"/>\r\n            </CCardHeader> */}\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"name\">Company name</CLabel>\r\n                    <CInput id=\"name\" placeholder=\"Enter Country name\" name=\"CCOMPANY_NAME\" value={CompanyData.COMPANY_NAME} required  onChange={(e)=>handleInputChange(e)}/>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"ccnumber\">Company Code</CLabel>\r\n                    <CInput id=\"COMPANY_LOGO\" placeholder=\"Enter Company Logo\" name=\"COMPANY_LOGO\" value={CompanyData.COMPANY_LOGO} required  onChange={(e)=>handleInputChange(e)}/>\r\n                  </CFormGroup>\r\n                </CCol>\r\n               \r\n              </CRow>\r\n              <CRow>\r\n                <CCol xs=\"6\">\r\n                  <CFormGroup>\r\n                    <CLabel htmlFor=\"name\">Status</CLabel>\r\n                    <CSwitch className={'mx-1'} variant={'3d'} name=\"StatusSwitch\" color={'primary'} checked={CompanyData.StatusSwitch} onChange={(e)=>ChangeSwitch(e)}/>\r\n                  </CFormGroup>\r\n                </CCol>\r\n                <CCol xs=\"6\">\r\n                 \r\n                </CCol>\r\n              </CRow>\r\n              {/* <CButton type=\"submit\" size=\"sm\" color=\"success\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\r\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton> */}\r\n              \r\n            </CCardBody>\r\n           \r\n          </CCard>\r\n        </CCol>\r\n        \r\n      </CRow>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n        {/* <CCol col=\"6\" sm=\"4\" md=\"2\" xl className=\"mb-3 mb-xl-0\">\r\n              <CButton block color=\"success\">Success</CButton>\r\n            </CCol> */}\r\n            <CButton  color=\"success\" onClick={(e)=>SaveCompany()}>Save</CButton>\r\n          <CButton\r\n            color=\"secondary\"\r\n            onClick={toggle}\r\n          >Cancel</CButton>\r\n        </CModalFooter>\r\n      </CModal>\r\n      <CModal \r\n              show={danger} \r\n              onClose={() => setDanger(!danger)}\r\n              color=\"danger\" \r\n            >\r\n              <CModalHeader closeButton>\r\n                <CModalTitle>Delete Confirm</CModalTitle>\r\n              </CModalHeader>\r\n              <CModalBody>\r\n                Do you want to delete this data?\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton color=\"danger\"onClick={(e)=>DeleteCompany()}>Delete</CButton>{' '}\r\n                <CButton color=\"secondary\" onClick={() => setDanger(!danger)}>Cancel</CButton>\r\n              </CModalFooter>\r\n            </CModal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Company\r\n"],"sourceRoot":""}